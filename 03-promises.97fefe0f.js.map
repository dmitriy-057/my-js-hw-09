{"mappings":"YAAA,IAAMA,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,kBAC9BE,KAAMH,SAASC,cAAc,iBAC7BG,OAAQJ,SAASC,cAAc,oBAIjC,SAASI,EAAcC,EAASJ,GAE9B,OAAO,IAAIK,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAIpCJ,EAAQ,CAACK,EAAEP,EAASJ,UAGpBO,EAAO,CAACI,EAAEP,EAAUJ,S,GAErBA,E,IAIPJ,EAAKC,KAAKe,iBAAiB,UAE3B,SAAsBC,GACpBA,EAAEC,iBAMA,IAJF,IAAMZ,EAASa,OAAOnB,EAAKM,OAAOc,OAC5BC,EAAQF,OAAOnB,EAAKI,MAAMgB,OAC1Bf,EAAOc,OAAOnB,EAAKK,KAAKe,OAEnBE,EAAI,EAAGA,EAAIhB,EAAQgB,IAC1Bd,SAAWc,EAAI,EAEff,EAAcC,SAAUa,EAAQC,EAAIjB,GACnCkB,MAAK,SAAAC,G,IAAET,EAACS,EAADT,EAAEX,EAAKoB,EAALpB,MACRqB,MAAM,uBAAiCC,OAARX,EAAE,QAAYW,OAANtB,EAAM,M,IAE9CuB,OAAM,SAAAH,G,IAAET,EAACS,EAADT,EAAEX,EAAKoB,EAALpB,MACTqB,MAAM,sBAAgCC,OAARX,EAAE,QAAYW,OAANtB,EAAM,M,IAGhDJ,EAAKC,KAAK2B,O","sources":["src/js/03-promises.js"],"sourcesContent":["const refs = {\n  form: document.querySelector(\".form\"),\n  delay: document.querySelector(\"[name='delay']\"),\n  step: document.querySelector(\"[name='step']\"),\n  amount: document.querySelector(\"[name='amount']\")\n}\n\n\nfunction createPromise(position,delay) {\n  \n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n\n      if (shouldResolve) {\n        // Fulfill\n        resolve({i:position,delay})\n      } else {\n        // Reject\n        reject({i:position, delay})\n      };\n    }, delay);\n  })\n};\n\nrefs.form.addEventListener('submit', onFormSubmit)\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n\n  const amount = Number(refs.amount.value);\n  const delay = Number(refs.delay.value);\n  const step = Number(refs.step.value);\n\n    for (let i = 0; i < amount; i++) {\n      position = i + 1;\n\n      createPromise(position, delay + i * step)\n      .then(({i,delay}) => {\n        alert(`✅ Fulfilled promise ${i} in ${delay}ms`);\n      })\n      .catch(({i,delay}) => {\n        alert(`❌ Rejected promise ${i} in ${delay}ms`);\n      })\n    }\n    refs.form.reset();\n}\n\n\n\n\n\n\n\n// function createPromise(position,delay) {\n//    return new Promise((resolve, reject) => {\n//     console.log('Promise pending');\n\n//     setTimeout(() => {\n//       const shouldResolve = Math.random() > 0.3;\n\n//       if (shouldResolve) {\n//         // Fulfill\n//        resolve({i:position,delay});\n//       } else {\n//         // Reject\n//         reject({i:position,delay});\n//       };\n//     }, delay);\n//   })\n// };\n\n\n    \n\n\n\n// refs.form.addEventListener(\"submit\", onFormSubmit)\n\n// function onFormSubmit(e) {\n//   e.preventDefault();\n//   let amount = Number(refs.amount.value);\n//   let delay = Number(refs.delay.value);\n//   let step = Number(refs.step.value);\n\n \n//   for (let i= 0; i < amount; i ++ ) {\n//     position = i + 1;\n//     createPromise(position, delay + i * step)\n//       .then(({ i, delay }) => {\n//       alert(`✅ Fulfilled promise ${i} in ${delay}ms`);\n//     })\n//     .catch(({ i, delay }) => {\n//       alert(`❌ Rejected promise ${i} in ${delay}ms`);\n//     });\n//   }\n//  refs.form.reset();\n// };\n\n\n\n\n\n\n\n\n\n\n"],"names":["$ce04d3a99e08e73b$var$refs","form","document","querySelector","delay","step","amount","$ce04d3a99e08e73b$var$createPromise","position","Promise","resolve","reject","setTimeout","Math","random","i","addEventListener","e","preventDefault","Number","value","delay1","i1","then","param","alert","concat","catch","reset"],"version":3,"file":"03-promises.97fefe0f.js.map"}