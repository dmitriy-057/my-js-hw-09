{"mappings":"YAAA,IAAMA,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,kBAC9BE,KAAMH,SAASC,cAAc,iBAC7BG,OAAQJ,SAASC,cAAc,oBAIjC,SAASI,EAAcC,EAASJ,GAC9B,OAAO,IAAIK,SAAQ,SAACC,EAASC,GAC3BC,QAAQC,IAAI,mBAEZC,YAAW,WACaC,KAAKC,SAAW,GAIpCN,EAAQ,CAACF,WAASJ,UAGlBO,EAAO,CAACH,WAASJ,S,GAGlBA,E,IASPJ,EAAKC,KAAKgB,iBAAiB,UAE3B,SAAsBC,GACpBA,EAAEC,iBAKF,IAJA,IAAIb,EAASc,OAAOpB,EAAKM,OAAOe,OAC5BC,EAAQF,OAAOpB,EAAKI,MAAMiB,OAGrBE,GAFEH,OAAOpB,EAAKK,KAAKgB,OAEf,GAAGE,EAAIjB,EAAQiB,GAAG,EAAG,CAEhChB,EADeD,EAAOiB,GACCD,GACtBE,MAAK,SAAAC,G,IAAGjB,EAAQiB,EAARjB,SAAUJ,EAAKqB,EAALrB,MACjBQ,QAAQC,IAAI,uBAAwCa,OAAflB,EAAS,QAAYkB,OAANtB,EAAM,M,IAE3DuB,OAAM,SAAAF,G,IAAGjB,EAAQiB,EAARjB,SAAUJ,EAAKqB,EAALrB,MAClBQ,QAAQC,IAAI,sBAAuCa,OAAflB,EAAS,QAAYkB,OAANtB,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["const refs = {\n  form: document.querySelector(\".form\"),\n  delay: document.querySelector(\"[name='delay']\"),\n  step: document.querySelector(\"[name='step']\"),\n  amount: document.querySelector(\"[name='amount']\")\n}\n\n\nfunction createPromise(position,delay) {\n  return new Promise((resolve, reject) => {\n    console.log('Promise pending');\n\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n\n      if (shouldResolve) {\n        // Fulfill\n        resolve({position,delay});\n      } else {\n        // Reject\n        reject({position,delay});\n      };\n\n    }, delay);\n  })\n};\n\n\n    \n\n\n\nrefs.form.addEventListener(\"submit\", onFormSubmit)\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n  let amount = Number(refs.amount.value);\n  let delay = Number(refs.delay.value);\n  let step = Number(refs.step.value);\n\n  for (let i = 0; i < amount; i+=1) {\n    let position = amount[i];\n    createPromise(position,delay)\n    .then(({ position, delay }) => {\n      console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n  }\n \n};\n\n\n// function delay(ms) {\n//   // ваш код\n// return new Promise((resolve, reject) => {\n//   setTimeout(() => {\n//     resolve()\n//   }, ms);\n// })\n// }\n\n// delay(3000).then(() => alert('выполнилось через 3 секунды'));\n\n\n\n\n\n\n\n"],"names":["$ce04d3a99e08e73b$var$refs","form","document","querySelector","delay","step","amount","$ce04d3a99e08e73b$var$createPromise","position","Promise","resolve","reject","console","log","setTimeout","Math","random","addEventListener","e","preventDefault","Number","value","delay1","i","then","param","concat","catch"],"version":3,"file":"03-promises.bdba1e41.js.map"}